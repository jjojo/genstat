{"version":3,"sources":["helpers/n-formatter.pipe.ts"],"names":["core_1","require","NFormatterPipe","prototype","transform","value","args","this","nFormatter","num","digits","i","si","symbol","rx","length","toFixed","replace","__decorate","Pipe","name","exports"],"mappings":"sgBAAAA,OAAAC,QAAoC,iBAKpCC,eAAA,WAAA,QAAAA,MA0BA,MAxBEA,GAAAC,UAAAC,UAAA,SAAUC,EAAYC,GACpB,GAAGD,EACD,MAAOE,MAAKC,WAAWH,EAAOC,IAIlCJ,EAAAC,UAAAK,WAAA,SAAWC,EAAKC,GAEZ,GAOoCC,GAPhCC,IACDP,MAAO,KAAMQ,OAAQ,MACrBR,MAAO,KAAMQ,OAAQ,MACrBR,MAAO,KAAMQ,OAAQ,MACrBR,MAAO,IAAKQ,OAAQ,MACpBR,MAAO,IAAKQ,OAAQ,MACpBR,MAAO,IAAKQ,OAAQ,MACpBC,EAAK,0BACR,KAAKH,EAAI,EAAGA,EAAIC,EAAGG,OAAQJ,IACzB,GAAIF,GAAOG,EAAGD,GAAGN,MACf,OAAQI,EAAMG,EAAGD,GAAGN,OAAOW,QAAQN,GAAQO,QAAQH,EAAI,MAAQF,EAAGD,GAAGE,MAGzE,OAAOJ,GAAIO,QAAQN,GAAQO,QAAQH,EAAI,OA1B7CZ,EAAAgB,YAAClB,OAAAmB,MACCC,KAAM,wDAEKC,SAAAnB,eAAcA","file":"helpers/n-formatter.pipe.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'nFormatter'\n})\nexport class NFormatterPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if(value){\n      return this.nFormatter(value, args);\n    }\n  }\n\n  nFormatter(num, digits) {\n\n      var si = [\n        {value: 1E18, symbol: \"E\"},\n        {value: 1E15, symbol: \"P\"},\n        {value: 1E12, symbol: \"T\"},\n        {value: 1E9, symbol: \"G\"},\n        {value: 1E6, symbol: \"M\"},\n        {value: 1E3, symbol: \"K\"}\n      ], rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/, i;\n      for (i = 0; i < si.length; i++) {\n        if (num >= si[i].value) {\n          return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n        }\n      }\n      return num.toFixed(digits).replace(rx, \"$1\");\n  }\n\n}\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["components/share-button/share-button.component.ts"],"names":["core_1","require","share_buttons_class_1","share_buttons_service_1","ShareButtonComponent","sbService","renderer","elementRef","this","count","countOuter","EventEmitter","prototype","ngAfterViewInit","_this","url","r","test","console","warn","window","location","href","setElementProperty","btn","nativeElement","button","template","setElementClass","classes","provider","subscribe","shareCount","counter","createElement","nFormatter","emit","share","shareArgs","ShareArgs","title","description","image","tags","open","windowAttr","num","digits","i","si","value","symbol","rx","length","toFixed","replace","__decorate","Input","Output","ViewChild","Component","selector","changeDetection","ChangeDetectionStrategy","OnPush","exports"],"mappings":"sgBAAAA,OAAAC,QAUO,iBAEPC,sBAAAD,QAAqC,qCACrCE,wBAAAF,QAAkC,uCAOlCG,qBAAA,WAkBI,QAAAA,GAAoBC,EACAC,EACAC,GAFAC,KAAAH,UAAAA,EACAG,KAAAF,SAAAA,EACAE,KAAAD,WAAAA,EARXC,KAAAC,OAAiB,EAEhBD,KAAAE,WAAa,GAAIV,QAAAW,aAiE/B,MAxDIP,GAAAQ,UAAAC,gBAAA,WAAA,GAAAC,GAAAN,IAEI,IAAIA,KAAKO,IAAK,CAEV,GAAIC,GAAI,mFACHA,GAAEC,KAAKT,KAAKO,OACbG,QAAQC,KAAK,kDACbX,KAAKO,IAAMK,OAAOC,SAASC,UAI/Bd,MAAKO,IAAMK,OAAOC,SAASC,IAE/Bd,MAAKF,SAASiB,mBAAmBf,KAAKgB,IAAIC,cAAe,YAAajB,KAAKkB,OAAOC,UAClFnB,KAAKF,SAASsB,gBAAgBpB,KAAKgB,IAAIC,cAAejB,KAAKkB,OAAOG,SAAS,GAGvErB,KAAKC,OACLD,KAAKH,UAAUI,MAAMD,KAAKkB,OAAOI,SAAUtB,KAAKO,KAC3CgB,UAAU,SAAAC,GACP,GAAGA,EAAY,CACX,GAAIC,GAAUnB,EAAKR,SAAS4B,cAAcpB,EAAKP,WAAWkB,cAAe,OACzEX,GAAKR,SAASsB,gBAAgBK,EAAS,mBAAmB,GAC1DnB,EAAKR,SAASiB,mBAAmBU,EAAS,cAAenB,EAAKqB,WAAWH,EAAY,IACrFlB,EAAKJ,WAAW0B,KAAKJ,OAQzC5B,EAAAQ,UAAAyB,MAAA,WACI,GAAIC,GAAY,GAAIpC,uBAAAqC,UAAU/B,KAAKO,IAAKP,KAAKgC,MAAOhC,KAAKiC,YAAajC,KAAKkC,MAAOlC,KAAKmC,KACvFvB,QAAOwB,KAAKpC,KAAKH,UAAUgC,MAAM7B,KAAKkB,OAAOI,SAAUQ,GAAY,YAAa9B,KAAKH,UAAUwC,eAInGzC,EAAAQ,UAAAuB,WAAA,SAAWW,EAAKC,GACZ,GAOoCC,GAPhCC,IACCC,MAAO,KAAMC,OAAQ,MACrBD,MAAO,KAAMC,OAAQ,MACrBD,MAAO,KAAMC,OAAQ,MACrBD,MAAO,IAAKC,OAAQ,MACpBD,MAAO,IAAKC,OAAQ,MACpBD,MAAO,IAAKC,OAAQ,MACtBC,EAAK,0BACR,KAAKJ,EAAI,EAAGA,EAAIC,EAAGI,OAAQL,IACvB,GAAIF,GAAOG,EAAGD,GAAGE,MACb,OAAQJ,EAAMG,EAAGD,GAAGE,OAAOI,QAAQP,GAAQQ,QAAQH,EAAI,MAAQH,EAAGD,GAAGG,MAG7E,OAAOL,GAAIQ,QAAQP,GAAQQ,QAAQH,EAAI,OAxE3CI,YAACxD,OAAAyD,oEACDD,YAACxD,OAAAyD,sEACDD,YAACxD,OAAAyD,4EACDD,YAACxD,OAAAyD,sEACDD,YAACxD,OAAAyD,oEAGDD,YAACxD,OAAAyD,kGAEDD,YAACxD,OAAAyD,uEAEDD,YAACxD,OAAA0D,4EAEDF,YAACxD,OAAA2D,UAAU,8EArBfvD,EAAAoD,YAACxD,OAAA4D,WACGC,SAAU,eACVlC,SAAU,4CACVmC,gBAAiB9D,OAAA+D,wBAAwBC,+HAEhCC,SAAA7D,qBAAoBA","file":"components/share-button/share-button.component.js","sourcesContent":["import {\n    Component,\n    AfterViewInit,\n    Input,\n    Output,\n    EventEmitter,\n    Renderer,\n    ViewChild,\n    ElementRef,\n    ChangeDetectionStrategy\n} from '@angular/core';\n\nimport {ShareButton, ShareArgs} from \"../../helpers/share-buttons.class\";\nimport {ShareButtonsService} from \"../../service/share-buttons.service\";\n\n@Component({\n    selector: 'share-button',\n    template: '<button  #btn (click)=\"share()\"></button>',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShareButtonComponent implements AfterViewInit {\n\n    /** Share Args */\n    @Input() url: string;\n    @Input() title: string;\n    @Input() description: string;\n    @Input() image: string;\n    @Input() tags: string[];\n\n    /** Button type e.g. fb, twitter, reddit...etc */\n    @Input() button: ShareButton;\n    /** Show count, disabled by default */\n    @Input() count: boolean = false;\n    /** Output button count to calculate total share counts */\n    @Output() countOuter = new EventEmitter();\n\n    @ViewChild('btn') btn: ElementRef;\n\n    constructor(private sbService: ShareButtonsService,\n                private renderer: Renderer,\n                private elementRef: ElementRef) {\n    }\n\n    ngAfterViewInit() {\n        /** If URL is not presented then set the current URL    */\n        if (this.url) {\n            /** If URL is presented check if it is a valid URL */\n            let r = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n            if (!r.test(this.url)) {\n                console.warn('Invalid URL, switching to window.location.href');\n                this.url = window.location.href;\n            }\n        }\n        else {\n            this.url = window.location.href;\n        }\n        this.renderer.setElementProperty(this.btn.nativeElement, 'innerHTML', this.button.template);\n        this.renderer.setElementClass(this.btn.nativeElement, this.button.classes, true);\n\n        /** Add share count if enabled */\n        if (this.count) {\n            this.sbService.count(this.button.provider, this.url)\n                .subscribe(shareCount => {\n                    if(shareCount) {\n                        let counter = this.renderer.createElement(this.elementRef.nativeElement, 'span');\n                        this.renderer.setElementClass(counter, 'sb-button-count', true);\n                        this.renderer.setElementProperty(counter, 'textContent', this.nFormatter(shareCount, 1));\n                        this.countOuter.emit(shareCount);\n                    }\n                });\n        }\n    }\n\n\n    /** Open share window */\n    share() {\n        let shareArgs = new ShareArgs(this.url, this.title, this.description, this.image, this.tags);\n        window.open(this.sbService.share(this.button.provider, shareArgs), 'newwindow', this.sbService.windowAttr());\n    }\n\n\n    nFormatter(num, digits) {\n        var si = [\n            {value: 1E18, symbol: \"E\"},\n            {value: 1E15, symbol: \"P\"},\n            {value: 1E12, symbol: \"T\"},\n            {value: 1E9, symbol: \"G\"},\n            {value: 1E6, symbol: \"M\"},\n            {value: 1E3, symbol: \"K\"}\n        ], rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/, i;\n        for (i = 0; i < si.length; i++) {\n            if (num >= si[i].value) {\n                return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n            }\n        }\n        return num.toFixed(digits).replace(rx, \"$1\");\n    }\n\n\n}\n\n"],"sourceRoot":"/source/"}